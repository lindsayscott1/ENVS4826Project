library(ggplot2)
library(dplyr)
faodata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOSTAT_data_12-2-2020.csv")
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture Total", ?..Area == "World")
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture Total", Area == "World")
View(faodata)
head(faodata)
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture Total", ï..Area == "World")
ggplot() +
geom_line(data = figure1, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture total", ï..Area == "World")
ggplot() +
geom_line(data = figure1, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 2 code, graph of Canadian Total Agricultural Methane Emissions
figure2 <- faodata %>%
filter(Item == "Agriculture total", ï..Area == "Canada")
ggplot() +
geom_line(data = figure2, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 3 code, graph of United States Total Agricultural Methane Emissions
figure3 <- faodata %>%
filter(Item == "Agriculture total", ï..Area == "United States of America")
ggplot() +
geom_line(data = figure3, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 4 code, graph of World Agricultural Methane Emissions by Item type
figure4 <- faodata %>%
filter(Item != "Agriculture total", ï..Area == "World")
ggplot() +
geom_line(data = figure4, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
ggplot() +
geom_line(data = figure4, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
ggplot() +
geom_line(data = figure4, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 5 code, graph of Canadian Agricultural Methane Emissions by Item type
figure5 <- faodata %>%
filter(Item != "Agriculture total", ï..Area == "Canada")
ggplot() +
geom_line(data = figure5, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 6 code, graph of United States Agricultural Methane Emissions by Item type
figure6 <- faodata %>%
filter(Item != "Agriculture total", ï..Area == "United States of America")
ggplot() +
geom_line(data = figure6, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Statistics time
# First linear model is for the World data
lmworld <- faodata %>%
filter(ï..Area == "World")
# Statistics time
# First linear model is for the World data
worlddata <- faodata %>%
filter(ï..Area == "World")
lmworld <- lm(Agriculture total ~ Enteric Fermentation + Rice Cultivation + Burning - Crop residues + Manure Management, data = worlddata)
# Statistics time
# First we upload another csv, that has been edited in excel from the original dataset to make each of the Items into their own column
worlddata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOWorldData.csv")
# Then we can run the linear model
lmworld <- lm(Atot ~ EF + RC + BC + MM, data = worlddata)
summary(lmworld)
# And check the assumptions:
worldresids <- resid(lmworld)
shapiro.test(worldresids)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
bartlett.test(Atot ~ EF + RC + BC + MM, data = worlddata)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
bartlett.test(formula = Atot ~ EF + RC + BC + MM, data = worlddata)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
plot(lmworld)
canadadata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOCanadaData.csv")
lmcanada <- lm(Atot ~ EF + RC + BC + MM, data = canadadata)
lmcanada <- lm(Atot ~ EF + BC + MM, data = canadadata)
summary(lmcanada)
# Now to check assumptions
canadaresids <- resid(lmcanada)
shapiro.test(canadaresids)
# This data is significantly different from normal distribution, p < 0.05, it does not meet the first assumption
plot(lmcanada)
usdata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOUSData.csv")
lmusa <- lm(Atot ~ EF + BC + MM, data = usdata)
lmusa <- lm(Atot ~ EF + RC + BC + MM, data = usdata)
summary(lmusa)
# And check the assumptions for this
usaresids <- resid(lmusa)
shapiro.test(usaresids)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
plot(lmusa)
library(ggplot2)
library(dplyr)
faodata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOSTAT_data_12-2-2020.csv")
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture total", Ã¯..Area == "World")
View(faodata)
head(faodata)
# We need to rename the Area column in order for the script to run
faodata <- faodata %>%
rename(ï..Area = Area)
# We need to rename the Area column in order for the script to run
faodata <- faodata %>%
rename(Area = ï..Area)
library(ggplot2)
library(dplyr)
faodata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOSTAT_data_12-2-2020.csv")
# We need to rename the Area column in order for the script to run
faodata <- faodata %>%
rename(Area = ï..Area)
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture total", Area == "World")
ggplot() +
geom_line(data = figure1, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 2 code, graph of Canadian Total Agricultural Methane Emissions
figure2 <- faodata %>%
filter(Item == "Agriculture total", Area == "Canada")
ggplot() +
geom_line(data = figure2, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 3 code, graph of United States Total Agricultural Methane Emissions
figure3 <- faodata %>%
filter(Item == "Agriculture total", Area == "United States of America")
ggplot() +
geom_line(data = figure3, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 4 code, graph of World Agricultural Methane Emissions by Item type
figure4 <- faodata %>%
filter(Item != "Agriculture total", Area == "World")
ggplot() +
geom_line(data = figure4, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 5 code, graph of Canadian Agricultural Methane Emissions by Item type
figure5 <- faodata %>%
filter(Item != "Agriculture total", Area == "Canada")
ggplot() +
geom_line(data = figure5, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 6 code, graph of United States Agricultural Methane Emissions by Item type
figure6 <- faodata %>%
filter(Item != "Agriculture total", Area == "United States of America")
ggplot() +
geom_line(data = figure6, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Statistics time
# First we upload another csv, that has been edited in excel from the original dataset to make each of the Items into their own column
worlddata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOWorldData.csv")
# Then we can run the linear model, this one is for the world data
lmworld <- lm(Atot ~ EF + RC + BC + MM, data = worlddata)
summary(lmworld)
# And check the assumptions:
worldresids <- resid(lmworld)
shapiro.test(worldresids)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
plot(lmworld)
# Now to check assumptions
canadaresids <- resid(lmcanada)
shapiro.test(canadaresids)
# This data is significantly different from normal distribution, p < 0.05, it does not meet the first assumption
plot(lmcanada)
# The same thing as above, but now we need the data for just Canada
canadadata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOCanadaData.csv")
lmcanada <- lm(Atot ~ EF + BC + MM, data = canadadata)
summary(lmcanada)
# Now to check assumptions
canadaresids <- resid(lmcanada)
shapiro.test(canadaresids)
# This data is significantly different from normal distribution, p < 0.05, it does not meet the first assumption
plot(lmcanada)
# Finally we need to run a linear model for the USA data
usdata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOUSData.csv")
lmusa <- lm(Atot ~ EF + RC + BC + MM, data = usdata)
summary(lmusa)
# And check the assumptions for this
usaresids <- resid(lmusa)
shapiro.test(usaresids)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
plot(lmusa)
library(ggplot2)
library(dplyr)
faodata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOSTAT_data_12-2-2020.csv")
# We need to rename the Area column in order for the script to run
faodata <- faodata %>%
rename(Area = ï..Area)
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture total", Area == "World")
ggplot() +
geom_line(data = figure1, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 2 code, graph of Canadian Total Agricultural Methane Emissions
figure2 <- faodata %>%
filter(Item == "Agriculture total", Area == "Canada")
ggplot() +
geom_line(data = figure2, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 3 code, graph of United States Total Agricultural Methane Emissions
figure3 <- faodata %>%
filter(Item == "Agriculture total", Area == "United States of America")
ggplot() +
geom_line(data = figure3, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 4 code, graph of World Agricultural Methane Emissions by Item type
figure4 <- faodata %>%
filter(Item != "Agriculture total", Area == "World")
ggplot() +
geom_line(data = figure4, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 5 code, graph of Canadian Agricultural Methane Emissions by Item type
figure5 <- faodata %>%
filter(Item != "Agriculture total", Area == "Canada")
ggplot() +
geom_line(data = figure5, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 6 code, graph of United States Agricultural Methane Emissions by Item type
figure6 <- faodata %>%
filter(Item != "Agriculture total", Area == "United States of America")
ggplot() +
geom_line(data = figure6, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Statistics time
# First we upload another csv, that has been edited in excel from the original dataset to make each of the Items into their own column
worlddata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOWorldData.csv")
# Then we can run the linear model, this one is for the world data
lmworld <- lm(Atot ~ EF + RC + BC + MM, data = worlddata)
summary(lmworld)
# And check the assumptions:
worldresids <- resid(lmworld)
shapiro.test(worldresids)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
plot(lmworld)
# The same thing as above, but now we need the data for just Canada
canadadata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOCanadaData.csv")
lmcanada <- lm(Atot ~ EF + BC + MM, data = canadadata)
summary(lmcanada)
# Now to check assumptions
canadaresids <- resid(lmcanada)
shapiro.test(canadaresids)
# This data is significantly different from normal distribution, p < 0.05, it does not meet the first assumption
plot(lmcanada)
# Finally we need to run a linear model for the USA data
usdata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/FAOUSData.csv")
lmusa <- lm(Atot ~ EF + RC + BC + MM, data = usdata)
summary(lmusa)
# And check the assumptions for this
usaresids <- resid(lmusa)
shapiro.test(usaresids)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
plot(lmusa)
library(readr)
FAOSTAT_data_12_2_2020 <- read_csv("FAOSTAT_data_12-2-2020.csv")
View(FAOSTAT_data_12_2_2020)
faodata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOSTAT_data_12-2-2020.csv")
# We need to rename the Area column in order for the script to run
faodata <- faodata %>%
rename(Area = ï..Area)
library(ggplot2)
library(dplyr)
faodata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOSTAT_data_12-2-2020.csv")
# We need to rename the Area column in order for the script to run
faodata <- faodata %>%
rename(Area = ï..Area)
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture total", Area == "World")
ggplot() +
geom_line(data = figure1, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 2 code, graph of Canadian Total Agricultural Methane Emissions
figure2 <- faodata %>%
filter(Item == "Agriculture total", Area == "Canada")
ggplot() +
geom_line(data = figure2, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 3 code, graph of United States Total Agricultural Methane Emissions
figure3 <- faodata %>%
filter(Item == "Agriculture total", Area == "United States of America")
ggplot() +
geom_line(data = figure3, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 4 code, graph of World Agricultural Methane Emissions by Item type
figure4 <- faodata %>%
filter(Item != "Agriculture total", Area == "World")
ggplot() +
geom_line(data = figure4, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 5 code, graph of Canadian Agricultural Methane Emissions by Item type
figure5 <- faodata %>%
filter(Item != "Agriculture total", Area == "Canada")
ggplot() +
geom_line(data = figure5, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 6 code, graph of United States Agricultural Methane Emissions by Item type
figure6 <- faodata %>%
filter(Item != "Agriculture total", Area == "United States of America")
ggplot() +
geom_line(data = figure6, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Statistics time
# First we upload another csv, that has been edited in excel from the original dataset to make each of the Items into their own column
worlddata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOWorldData.csv")
# Then we can run the linear model, this one is for the world data
lmworld <- lm(Atot ~ EF + RC + BC + MM, data = worlddata)
summary(lmworld)
# And check the assumptions:
worldresids <- resid(lmworld)
# The same thing as above, but now we need the data for just Canada
canadadata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOCanadaData.csv")
# Finally we need to run a linear model for the USA data
usdata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOUSData.csv")
library(ggplot2)
library(dplyr)
faodata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOSTAT_data_12-2-2020.csv")
# We need to rename the Area column in order for the script to run
faodata <- faodata %>%
rename(Area = ï..Area)
# Figure 1 code, graph of World Total Agricultural Methane Emissions
figure1 <- faodata %>%
filter(Item == "Agriculture total", Area == "World")
ggplot() +
geom_line(data = figure1, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 2 code, graph of Canadian Total Agricultural Methane Emissions
figure2 <- faodata %>%
filter(Item == "Agriculture total", Area == "Canada")
ggplot() +
geom_line(data = figure2, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 3 code, graph of United States Total Agricultural Methane Emissions
figure3 <- faodata %>%
filter(Item == "Agriculture total", Area == "United States of America")
ggplot() +
geom_line(data = figure3, aes(x = Year, y = Value), size = 1) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 5)) +
theme_classic()
# Figure 4 code, graph of World Agricultural Methane Emissions by Item type
figure4 <- faodata %>%
filter(Item != "Agriculture total", Area == "World")
ggplot() +
geom_line(data = figure4, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 5 code, graph of Canadian Agricultural Methane Emissions by Item type
figure5 <- faodata %>%
filter(Item != "Agriculture total", Area == "Canada")
ggplot() +
geom_line(data = figure5, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Figure 6 code, graph of United States Agricultural Methane Emissions by Item type
figure6 <- faodata %>%
filter(Item != "Agriculture total", Area == "United States of America")
ggplot() +
geom_line(data = figure6, aes(x = Year, y = Value, color = Item), size = 2) +
ylab("Value (Gg)") +
scale_x_continuous(breaks = seq(1960, 2018, 10)) +
theme_classic()
# Statistics time
# First we upload another csv, that has been edited in excel from the original dataset to make each of the Items into their own column
worlddata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOWorldData.csv")
# Then we can run the linear model, this one is for the world data
lmworld <- lm(Atot ~ EF + RC + BC + MM, data = worlddata)
summary(lmworld)
# And check the assumptions:
worldresids <- resid(lmworld)
shapiro.test(worldresids)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
plot(lmworld)
# The same thing as above, but now we need the data for just Canada
canadadata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOCanadaData.csv")
lmcanada <- lm(Atot ~ EF + BC + MM, data = canadadata)
summary(lmcanada)
# Now to check assumptions
canadaresids <- resid(lmcanada)
shapiro.test(canadaresids)
# This data is significantly different from normal distribution, p < 0.05, it does not meet the first assumption
plot(lmcanada)
# Finally we need to run a linear model for the USA data
usdata <- read.csv("C:/Users/Keegan & Lindsay/Documents/SMU/Data Science/Project/ENVS4826Project/FAOUSData.csv")
lmusa <- lm(Atot ~ EF + RC + BC + MM, data = usdata)
summary(lmusa)
# And check the assumptions for this
usaresids <- resid(lmusa)
shapiro.test(usaresids)
# The null hypothesis of normal distribution is accepted: there is no significant difference (p > 0.05) from a normal distribution
plot(lmusa)
